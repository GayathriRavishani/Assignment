import java.sql.*;
import java.util.Scanner;

public class StudentManagement {
    static final String URL = "jdbc:mysql://localhost:3307/studentdb";
    static final String USER = "root";       
    static final String PASSWORD = "root";    

    public static void testConnection() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(URL, USER, PASSWORD);
            System.out.println("Connection Successful!");
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void createTable() {
        try (Connection con = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = con.createStatement()) {

            String sql = "CREATE TABLE IF NOT EXISTS students (" +
                         "id INT PRIMARY KEY AUTO_INCREMENT," +
                         "name VARCHAR(50)," +
                         "age INT," +
                         "grade VARCHAR(10))";
            stmt.executeUpdate(sql);

            System.out.println("Table created successfully (if not exists).");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    
    public static void insertStudent(Scanner sc) {
        try (Connection con = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = con.createStatement()) {

            System.out.print("Enter Name: ");
            String name = sc.next();
            System.out.print("Enter Age: ");
            int age = sc.nextInt();
            System.out.print("Enter Grade: ");
            String grade = sc.next();

            String sql = "INSERT INTO students(name, age, grade) VALUES('" + name + "'," + age + ",'" + grade + "')";
            stmt.executeUpdate(sql);
            System.out.println("Student inserted successfully.");

        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }

    
    public static void viewStudents() {
        try (Connection con = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = con.createStatement()) {

            ResultSet rs = stmt.executeQuery("SELECT * FROM students");
            while (rs.next()) {
                System.out.println(rs.getInt("id") + " | " +
                                   rs.getString("name") + " | " +
                                   rs.getInt("age") + " | " +
                                   rs.getString("grade"));
            }

        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }

    
    public static void updateStudent(Scanner sc) {
        try (Connection con = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = con.createStatement()) {

            System.out.print("Enter ID of student to update: ");
            int id = sc.nextInt();
            System.out.print("Enter new Name: ");
            String name = sc.next();
            System.out.print("Enter new Age: ");
            int age = sc.nextInt();
            System.out.print("Enter new Grade: ");
            String grade = sc.next();

            String sql = "UPDATE students SET name='" + name + "', age=" + age + ", grade='" + grade + "' WHERE id=" + id;
            int rows = stmt.executeUpdate(sql);

            if (rows > 0)
                System.out.println("Student updated successfully.");
            else
                System.out.println("No student found with that ID.");

        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }

    
    public static void deleteStudent(Scanner sc) {
        try (Connection con = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = con.createStatement()) {

            System.out.print("Enter ID of student to delete: ");
            int id = sc.nextInt();

            String sql = "DELETE FROM students WHERE id=" + id;
            int rows = stmt.executeUpdate(sql);

            if (rows > 0)
                System.out.println("Student deleted successfully.");
            else
                System.out.println("No student found with that ID.");

        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }

    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\n--- Student Management System ---");
            System.out.println("0. Test DB Connection");
            System.out.println("1. Create Students Table");
            System.out.println("2. Insert Student");
            System.out.println("3. View Students");
            System.out.println("4. Update Student");
            System.out.println("5. Delete Student");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();

            switch (choice) {
                case 0:
                    testConnection();
                    break;
                case 1:
                    createTable();
                    break;
                case 2:
                    insertStudent(sc);
                    break;
                case 3:
                    viewStudents();
                    break;
                case 4:
                    updateStudent(sc);
                    break;
                case 5:
                    deleteStudent(sc);
                    break;
                case 6:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid choice.");
            }
        } while (choice != 6);

        sc.close();
    }
}
